// lib/widgets/onboarding/player_measurements_section.dart import 'package:flutter/material.dart'; import '../../../theme/app_theme.dart'; import '../../../localization/app_strings.dart'; import '../../../theme/app_colors.dart';  class PlayerMeasurementsSection extends StatelessWidget {   final TextEditingController heightController;   final TextEditingController weightController;   final String? selectedLeg;   final Function(String?) onLegChanged;    const PlayerMeasurementsSection({     Key? key,     required this.heightController,     required this.weightController,     required this.selectedLeg,     required this.onLegChanged,   }) : super(key: key);    @override   Widget build(BuildContext context) {     final theme = Theme.of(context);          return Column(       crossAxisAlignment: CrossAxisAlignment.start,       children: [         // Height and Weight fields         Row(           children: [             Text(AppStrings.get('height_label'), style: theme.textTheme.bodyLarge),             Expanded(               child: _buildTextFormField(                 key: const Key('height_field'),                 theme: theme,                 controller: heightController,                 labelText: AppStrings.get('height_unit'),                 validatorMessage: AppStrings.get('enter_height'),               ),             ),             const SizedBox(width: ThemeConstants.sm),             Text(AppStrings.get('weight_label'), style: theme.textTheme.bodyLarge),             Expanded(               child: _buildTextFormField(                 key: const Key('weight_field'),                 theme: theme,                 controller: weightController,                 labelText: AppStrings.get('weight_unit'),                 validatorMessage: AppStrings.get('enter_weight'),               ),             ),           ],         ),                  const SizedBox(height: ThemeConstants.md),                  // Strong leg selection         Row(           children: [             Text(               AppStrings.get('strong_leg'),               style: theme.textTheme.bodyLarge,             ),             const SizedBox(width: ThemeConstants.sm),             Expanded(               child: DropdownButtonFormField<String>(                 key: const Key('leg_dropdown'),                 value: selectedLeg,                 items: [                   DropdownMenuItem(value: 'right', child: Text(AppStrings.get('right_leg'))),                   DropdownMenuItem(value: 'left', child: Text(AppStrings.get('left_leg'))),                 ],                 onChanged: onLegChanged,                 decoration: InputDecoration(                   border: const OutlineInputBorder(),                   filled: true,                   fillColor: AppColors.background,                   contentPadding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),                   isDense: true,                 ),                 validator: (value) => value == null ? AppStrings.get('select_strong_leg') : null,               ),             ),           ],         ),       ],     );   }    Widget _buildTextFormField({     required ThemeData theme,     required TextEditingController controller,     required String labelText,     required String validatorMessage,     Key? key,   }) {     return TextFormField(       key: key,       controller: controller,       decoration: InputDecoration(         labelText: labelText,         border: const OutlineInputBorder(),         filled: true,         fillColor: AppColors.background,         contentPadding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),         isDense: true,       ),       validator: (value) =>           value == null || value.isEmpty ? validatorMessage : null,       style: theme.textTheme.bodyMedium,     );   } }
