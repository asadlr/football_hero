// lib/widgets/onboarding/player_position_section.dart import 'package:flutter/material.dart'; import '../../../theme/app_theme.dart'; import '../../../localization/app_strings.dart'; import '../../../theme/app_colors.dart';  class PlayerPositionSection extends StatelessWidget {   final Set<String> selectedPositions;   final Function(String, bool) onPositionSelected;    const PlayerPositionSection({     Key? key,     required this.selectedPositions,     required this.onPositionSelected,   }) : super(key: key);    @override   Widget build(BuildContext context) {     final theme = Theme.of(context);          final positions = [       {'label': AppStrings.get('position_goalkeeper'), 'value': 'goalkeeper'},       {'label': AppStrings.get('position_defense'), 'value': 'defense'},       {'label': AppStrings.get('position_midfield'), 'value': 'midfield'},       {'label': AppStrings.get('position_offense'), 'value': 'offense'},     ];      return Column(       crossAxisAlignment: CrossAxisAlignment.start,       children: [         Text(           AppStrings.get('position_label'),           style: theme.textTheme.bodyLarge,         ),         const SizedBox(height: ThemeConstants.sm),         Center(           child: Wrap(             spacing: 8,             runSpacing: 10,             children: positions.map((position) {               return FilterChip(                 key: Key('position_${position['value']}'),                 label: Text(                   position['label']!,                   style: theme.textTheme.bodySmall,                 ),                 selected: selectedPositions.contains(position['value']),                 onSelected: (selected) {                   onPositionSelected(position['value']!, selected);                 },                 backgroundColor: AppColors.background,                 selectedColor: AppColors.playerColor.withOpacity(0.2),               );             }).toList(),           ),         ),       ],     );   } }
