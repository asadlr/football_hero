name: Build and Deploy

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.x'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Setup keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=upload-keystore.jks" >> android/key.properties
      
      - name: Build APK
        run: flutter build apk --release
      
      - name: Build App Bundle
        run: flutter build appbundle --release
      
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: football-hero-apk
          path: build/app/outputs/flutter-apk/app-release.apk
      
      - name: Upload AAB
        uses: actions/upload-artifact@v3
        with:
          name: football-hero-aab
          path: build/app/outputs/bundle/release/app-release.aab
  
  build_ios:
    name: Build iOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.x'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Setup Provisioning Profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.PROVISIONING_PROFILE }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
      
      - name: Build iOS
        run: flutter build ios --release --no-codesign
      
      - name: Archive iOS app
        run: |
          cd ios
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -configuration Release -archivePath Runner.xcarchive archive
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: football-hero-ios
          path: ios/Runner.xcarchive
  
  deploy_staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build_android, build_ios]
    if: github.ref == 'refs/heads/main' || github.event.inputs.environment == 'staging'
    steps:
      - name: Download Android artifacts
        uses: actions/download-artifact@v3
        with:
          name: football-hero-apk
      
      - name: Deploy to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: app-release.apk
      
      - name: Notify deployment
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"FootballHero staging deployment completed."}' ${{ secrets.SLACK_WEBHOOK_URL }}
  
  deploy_production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build_android, build_ios]
    if: startsWith(github.ref, 'refs/tags/v') || github.event.inputs.environment == 'production'
    steps:
      - name: Download Android Bundle
        uses: actions/download-artifact@v3
        with:
          name: football-hero-aab
      
      - name: Setup Google Play API Access
        run: echo "${{ secrets.PLAY_STORE_CONFIG_JSON }}" > play-store-config.json
      
      - name: Deploy to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: play-store-config.json
          packageName: com.footballhero.app
          releaseFiles: app-release.aab
          track: production
          status: completed
      
      - name: Notify production release
        run: |
          curl -X POST -H 'Content-type: applica