name: Build APK

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (debug/release)'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true
      
      - name: Create .env file
        run: |
          mkdir -p assets
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" > assets/.env
          echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> assets/.env
          echo "ENV=${{ secrets.ENV }}" >> assets/.env
          echo "LOG_INFO=${{ secrets.LOG_INFO }}" >> assets/.env
          echo "LOG_WARNING=${{ secrets.LOG_WARNING }}" >> assets/.env
          echo "LOG_ERROR=${{ secrets.LOG_ERROR }}" >> assets/.env
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run tests
        run: flutter test
      
      - name: Fix Gradle configuration
        run: |
          cd android
          cat > gradle.properties << EOL
          org.gradle.jvmargs=-Xmx1536M
          android.useAndroidX=true
          android.enableJetifier=true
          android.enableR8=true
          org.gradle.parallel=true
          org.gradle.daemon=true
          EOL

      - name: Set up local.properties
        run: |
          cd android
          rm -f local.properties
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
      
      - name: Build APK
        run: |
          if [[ "${{ github.event.inputs.build_type }}" == "release" || "${{ github.ref }}" == "refs/tags/"* ]]; then
            flutter build apk --release
            ARTIFACT_PATH=build/app/outputs/flutter-apk/app-release.apk
            ARTIFACT_NAME=release-apk
          else
            flutter build apk --debug
            ARTIFACT_PATH=build/app/outputs/flutter-apk/app-debug.apk
            ARTIFACT_NAME=debug-apk
          fi
          echo "ARTIFACT_PATH=$ARTIFACT_PATH" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
      
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}
          retention-days: 7
