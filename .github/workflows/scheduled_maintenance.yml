name: Scheduled Maintenance

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  dependency_updates:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Check for outdated packages
        run: flutter pub outdated > outdated_packages.txt || echo "Failed to check outdated packages, but continuing" > outdated_packages.txt
      
      - name: Check for dependency conflicts
        run: flutter pub deps > dependency_tree.txt || echo "Failed to check dependency tree, but continuing" > dependency_tree.txt
      
      - name: Upload dependency reports
        uses: actions/upload-artifact@v3
        with:
          name: dependency-reports
          path: |
            outdated_packages.txt
            dependency_tree.txt
      
      - name: Create issue for outdated dependencies
        if: success()
        continue-on-error: true
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: Weekly Dependency Update Report
          content-filepath: outdated_packages.txt
          labels: maintenance, dependencies
  
  code_quality:
    name: Code Quality Metrics
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Create code size report
        run: find lib -name "*.dart" -type f -exec wc -l {} \; | sort -nr > code_size.txt || echo "Failed to create code size report" > code_size.txt
      
      - name: Generate code coverage
        continue-on-error: true
        run: |
          flutter test --coverage || echo "Tests failed but continuing"
          mkdir -p coverage/html
          if [ -f "coverage/lcov.info" ]; then
            genhtml coverage/lcov.info -o coverage/html || echo "Failed to generate HTML report"
          else
            echo "No coverage data generated" > coverage/html/index.html
          fi
      
      - name: Upload code quality reports
        uses: actions/upload-artifact@v3
        with:
          name: code-quality-reports
          path: |
            code_size.txt
            coverage/
  
  nightly_build:
    name: Nightly Build
    runs-on: ubuntu-latest
    needs: [dependency_updates, code_quality]
    steps:
      - uses: actions/checkout@v3
      
      - name: Get date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
      
      - name: Create .env file
        run: |
          mkdir -p assets
          echo "SUPABASE_URL=${SUPABASE_URL:-https://example.supabase.co}" > assets/.env
          echo "SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY:-example_key}" >> assets/.env
          echo "ENV=dev" >> assets/.env
          echo "LOG_INFO=true" >> assets/.env
          echo "LOG_WARNING=true" >> assets/.env
          echo "LOG_ERROR=true" >> assets/.env
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build Debug APK
        continue-on-error: true
        run: flutter build apk --debug
      
      - name: Rename build with date
        run: |
          mkdir -p nightly
          if [ -f "build/app/outputs/flutter-apk/app-debug.apk" ]; then
            mv build/app/outputs/flutter-apk/app-debug.apk nightly/footballhero-nightly-${{ steps.date.outputs.date }}.apk
          else
            echo "Build failed" > nightly/build_failed.txt
          fi
      
      - name: Upload nightly build
        uses: actions/upload-artifact@v3
        with:
          name: nightly-build-${{ steps.date.outputs.date }}
          path: nightly/
          retention-days: 7
  
  notify:
    name: Send Notifications
    runs-on: ubuntu-latest
    needs: [nightly_build]
    if: always()
    steps:
      - name: Prepare notification message
        id: notify
        run: |
          echo "message=Weekly maintenance workflow completed with status: ${{ job.status }}" >> $GITHUB_OUTPUT
      
      - name: Send Slack notification
        if: env.SLACK_WEBHOOK_URL != ''
        continue-on-error: true
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,workflow
          text: ${{ steps.notify.outputs.message }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      
      - name: Send email notification
        if: env.MAIL_SERVER != '' && env.MAIL_USERNAME != '' && env.MAIL_PASSWORD != '' && env.DEVOPS_EMAIL != ''
        continue-on-error: true
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT || '587' }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "Weekly Maintenance Report - FootballHero"
          body: |
            ${{ steps.notify.outputs.message }}
            
            Dependency Updates: ${{ needs.dependency_updates.result }}
            Code Quality: ${{ needs.code_quality.result }}
            Nightly Build: ${{ needs.nightly_build.result }}
            
            See the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.DEVOPS_EMAIL }}
          from: GitHub Actions
        env:
          MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          DEVOPS_EMAIL: ${{ secrets.DEVOPS_EMAIL }}
