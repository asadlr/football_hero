name: Scheduled Maintenance

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  dependency_updates:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Check for outdated packages
        run: flutter pub outdated > outdated_packages.txt
      
      - name: Check for dependency conflicts
        run: flutter pub deps > dependency_tree.txt
      
      - name: Upload dependency reports
        uses: actions/upload-artifact@v3
        with:
          name: dependency-reports
          path: |
            outdated_packages.txt
            dependency_tree.txt
      
      - name: Create issue for outdated dependencies
        if: success()
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: Weekly Dependency Update Report
          content-filepath: outdated_packages.txt
          labels: maintenance, dependencies
  
  code_quality:
    name: Code Quality Metrics
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Install Dart Code Metrics
        run: flutter pub global activate dart_code_metrics
      
      - name: Generate code metrics
        run: flutter pub global run dart_code_metrics:metrics analyze lib --reporter=json > code_metrics.json
      
      - name: Generate code coverage
        run: |
          flutter test --coverage
          lcov --remove coverage/lcov.info 'lib/generated/*' -o coverage/filtered_lcov.info
          genhtml coverage/filtered_lcov.info -o coverage/html
      
      - name: Create code size report
        run: find lib -name "*.dart" -type f -exec wc -l {} \; | sort -nr > code_size.txt
      
      - name: Upload code quality reports
        uses: actions/upload-artifact@v3
        with:
          name: code-quality-reports
          path: |
            code_metrics.json
            code_size.txt
            coverage/
  
  nightly_build:
    name: Nightly Build
    runs-on: ubuntu-latest
    needs: [dependency_updates, code_quality]
    steps:
      - uses: actions/checkout@v3
      
      - name: Get date
        id: date
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
      
      - name: Create .env file
        run: |
          mkdir -p assets
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" > assets/.env
          echo "SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}" >> assets/.env
          echo "ENV=dev" >> assets/.env
          echo "LOG_INFO=true" >> assets/.env
          echo "LOG_WARNING=true" >> assets/.env
          echo "LOG_ERROR=true" >> assets/.env
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build Debug APK
        run: flutter build apk --debug
      
      - name: Rename build with date
        run: |
          mkdir -p nightly
          mv build/app/outputs/flutter-apk/app-debug.apk nightly/footballhero-nightly-${{ steps.date.outputs.date }}.apk
      
      - name: Upload nightly build
        uses: actions/upload-artifact@v3
        with:
          name: nightly-build-${{ steps.date.outputs.date }}
          path: nightly/
          retention-days: 7
  
  notify:
    name: Send Notifications
    runs-on: ubuntu-latest
    needs: [nightly_build]
    if: always()
    steps:
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,workflow
          text: 'Weekly maintenance completed with status: ${{ job.status }}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ secrets.SLACK_WEBHOOK_URL != '' }}
      
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.MAIL_SERVER }}
          server_port: ${{ secrets.MAIL_PORT }}
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "Weekly Maintenance Report - FootballHero"
          body: |
            Weekly maintenance workflow completed with status: ${{ job.status }}
            
            Dependency Updates: ${{ needs.dependency_updates.result }}
            Code Quality: ${{ needs.code_quality.result }}
            Nightly Build: ${{ needs.nightly_build.result }}
            
            See the workflow run for details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.DEVOPS_EMAIL }}
          from: GitHub Actions
        if: ${{ secrets.MAIL_SERVER != '' }}